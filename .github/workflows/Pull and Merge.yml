on:
  push:
    branches:
      - 'feature/*'  # Triggers on pushes to feature/* branches

jobs:
  pr-creation:
    name: Create Pull Request
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Create Pull Request
      - name: Create Pull Request
        run: |
          # Extract the full branch name from github.ref
          FULL_BRANCH_NAME="${{ github.ref }}"
          
          # Strip the prefix to obtain the branch name
          branch_name=$(echo "$FULL_BRANCH_NAME" | sed 's|refs/heads/||')

          # Define the title for the pull request
          pr_title="Feature changes from $branch_name"

          # Specify the base branch (target branch for the pull request)
          base_branch="Dev"

          # Define the GitHub API endpoint for creating a pull request
          api_url="https://api.github.com/repos/${{ github.repository }}/pulls"

          # Send a POST request to the GitHub API to create a pull request
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "{\"title\":\"$pr_title\",\"head\":\"$branch_name\",\"base\":\"$base_branch\"}" \
            "$api_url"

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: pr-creation
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1
      
      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build project
      - name: Build project
        run: npm run build

  check-conflicts:
    name: Check Merge Conflicts
    runs-on: ubuntu-latest
    needs: pr-creation
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Check for merge conflicts
      - name: Check Merge Conflicts
        run: |

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          # Fetch the base branch (Dev) and merge into the current feature branch
          git fetch origin Dev
          git merge origin/Dev '--allow-unrelated-histories'

          # Check if there were any conflicts
          if [ "$(git ls-files -u | wc -l)" -gt 0 ]; then
            echo "Merge conflicts detected!"
            exit 1
          else
            echo "No merge conflicts found."
          fi

