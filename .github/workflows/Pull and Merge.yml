name: Feature to Dev PR Workflow

on:
  push:
    branches:
      - 'feature/*'  # Triggers on pushes to feature/* branches

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1
      
      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build project
      - name: Build project
        run: npm run build

      # Step 6: Create Pull Request
      - name: Create Pull Request
        run: |
          # Extract the full branch name from github.ref
          FULL_BRANCH_NAME="${{ github.ref }}"
          
          # Strip the prefix to obtain the branch name
          branch_name=$(echo "$FULL_BRANCH_NAME" | sed 's|refs/heads/||')
          
          # Define the title for the pull request
          pr_title="Feature changes from $branch_name"
          
          # Specify the base branch (target branch for the pull request)
          base_branch="Dev"
          
          # Define the GitHub API endpoint for creating a pull request
          api_url="https://api.github.com/repos/${{ github.repository }}/pulls"
          
          # Send a POST request to the GitHub API to create a pull request
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "{\"title\":\"$pr_title\",\"head\":\"$branch_name\",\"base\":\"$base_branch\"}" \
            "$api_url"

      # Step 7: Check for merge conflicts and handle them
      - name: Check merge conflicts and handle them
        run: |
          pr_number=$(gh pr list --base "Dev" --head "${{ github.head_ref }}" --json "number" --jq '.[] | .number')

          if [ -z "$pr_number" ]; then
              echo "No pull request found."
              exit 1
          fi

          # Check merge status
          mergeable=$(gh pr view "$pr_number" --json mergeable --jq '.mergeable')

          if [ "$mergeable" == "true" ]; then
              echo "Merging PR #$pr_number..."
              gh pr merge "$pr_number" --merge --delete-branch
              echo "PR #$pr_number merged successfully."
          else:
              echo "Merge conflicts detected in PR #$pr_number."
              exit 1
